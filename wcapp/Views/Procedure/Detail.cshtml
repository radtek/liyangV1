@using WCAPP.Models.Database
@using WCAPP.Types
@using WCAPP.Utils
@{
    Procedure procedure = ViewBag.Procedure;
    var process = procedure.Process;
}
<div style="border: 1px solid #eee; padding: 0 10px 10px;">
<div class="tabbable">
    <!-- Only required for left/right tabs -->
    <ul class="nav nav-tabs">
        <li class="active">
            <a style="font-size: 16px" data-toggle="tab">工序信息</a>
        </li>
    </ul>
    <div class="tab-content">
        <div class="tab-pane active">
            <div class="content">
                <div class="row" style="padding: 20px 60px 20px;">
                    <div class="row" style="padding: 20px 60px 20px;">
                        <div class="col-md-4 col-xs-4">
                            工艺规程编号：@Html.ActionLink(process.No, "Detail", "Process", new {id = process.Id}, null)
                        </div>
                        <div class="col-md-4 col-xs-4">
                            零件号：@process.PartNo
                        </div>
                        <div class="col-md-4 col-xs-4">
                            工序号：@procedure.No
                        </div>
                    </div>
                    <div class="row" style="padding: 0px 60px 20px;">
                        <div class="col-md-4 col-xs-4">
                            零件名称：@process.PartName
                        </div>
                        <div class="col-md-4 col-xs-4">
                            工序名称：@procedure.Name
                        </div>
                        <div class="col-md-4 col-xs-4">
                            焊接方法：@procedure.WeldMethod
                        </div>
                    </div>
                    <div class="row" style="padding: 0px 60px 20px;">
                        <div class="col-md-4 col-xs-4">
                            焊接类型：@procedure.WeldType
                        </div>
                        @if (procedure.WeldMethod == WeldMethod.电阻焊)
    {
                    <div class="col-md-4 col-xs-4">
                        焊接方式：@procedure.ResistType
                    </div>
}
else if (procedure.WeldMethod == WeldMethod.氩弧焊)
{
                    <div class="col-md-4 col-xs-4">
                        自动化程度：@procedure.AutoLevel
                    </div>
}
                        <div class="col-md-4 col-xs-4">
                            审核状态：@process.ApprovalState
                        </div>
                        <div style="padding: 50px 360px 10px;">
                            <a class="btn btn-primary" onclick="backs(@process.Id)">返回上一级</a>
                        </div>
                        
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="tabbable">
<ul class="nav nav-tabs">
    @{
        var tblidx = 1;

        if (procedure != null)
        {
            foreach (var seam in procedure.Seams)
            {
                <li id="@("tah" + tblidx)" @(tblidx == 1 ? "class=active" : "")>
                    <a style="font-size: 16px" href="@("#tab" + tblidx)" data-toggle="tab">焊缝 @seam.No</a>
                </li>
                tblidx++;
            }
        }
    }
</ul>
<div class="tab-content">
@{
    tblidx = 1;
    if (procedure != null)
    {
        foreach (var seam in procedure.Seams)
        {
            <div class="tab-pane @(tblidx == 1 ? "active" : "")" id="@("tab" + tblidx)">
            <div class="content">
                <div class="row" style="padding: 20px 60px 20px;">
                    <div class="col-md-2 col-xs-2">
                        试焊状态：@seam.TestState
                    </div>
                    @if (seam.TestState == TestState.已完成)
    {
                <div class="col-md-2 col-xs-2">
                    操作者：@seam.TestWelder
                </div>
                <div class="col-md-2 col-xs-2">
                    检验者：@seam.TestChecker
                </div>
                <div class="col-md-2 col-xs-2">
                    报告编号：@seam.SpecialReportFileNo
                </div>
                        //                using (Ajax.BeginForm("CheckPDF", new { seamId = seam.Id }, new AjaxOptions { OnSuccess = "onSimple" }))
                        //{
                <div class="col-md-2 col-xs-2">
                    检验报告： <button style="padding: 2px 6px 0 6px; font-size: 13px" class="btn btn-primary" onclick="checkPdf('@seam.Id')">查看报告</button>
    @*<input style="padding: 2px 6px 0 6px" id="modifypassword" class="btn btn-primary" type="submit" value="查看报告" />*@

                </div>


}
                </div>
            
            <table class="table table-striped table-hover text-center">
                <thead>
                    <tr>
                        <th class="text-center">接头形式</th>
                        <th class="text-center">焊缝等级</th>
                        <th class="text-center">检验标准</th>
                        <th class="text-center">材料牌号1</th>
                        <th class="text-center">厚度1</th>
                        <th class="text-center">材料牌号2</th>
                        <th class="text-center">厚度2</th>
                        @if (procedure.WeldMethod == WeldMethod.电阻焊)
                        {
                            <th class="text-center">焊机型别</th>
                            <th class="text-center">@(procedure.ResistType == ResistType.点焊 ? "电极直径" : "滚轮宽度")</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>@seam.JointForm</td>
                        <td>@seam.SeamLevel</td>
                        <td>@seam.CheckStandard</td>
                        <td>@seam.Material1</td>
                        <td>@seam.Thick1</td>
                        <td>@seam.Material2</td>
                        <td>@seam.Thick2</td>
                        @if (procedure.WeldMethod == WeldMethod.电阻焊)
                        {
                            <td>@seam.WeldMachineClass</td>
                            <td>@seam.ElectrodeDiameter</td>
                        }
                    </tr>
                </tbody>
            </table>

            @{
                var initialParamDict = new Dictionary<WeldParam, string>();
                var revisedParamDict = new Dictionary<WeldParam, string>();
                var revised = seam.RevisedParams.Any();
                if (seam.InitialParams.Any())
                {
                    foreach (var param in seam.InitialParams)
                    {
                        initialParamDict.Add(param.Enum, param.Value);
                    }
                }
                if (revised)
                {
                    foreach (var param in seam.RevisedParams)
                    {
                        revisedParamDict.Add(param.Enum, param.Value);
                    }
                }
            }

            <table class="table table-striped table-hover text-center" style="margin: 30px 0">
            @if (procedure.WeldMethod == WeldMethod.氩弧焊)
            {
                <thead>
                    <tr>
                        <th> </th>
                        <th class="text-center">焊接电流(A)</th>
                        <th class="text-center">焊接速度(m/min)</th>
                        <th class="text-center">焊料牌号</th>
                        <th class="text-center">焊料规格</th>
                        <th class="text-center">氩气流量正面(L/min)</th>
                        <th class="text-center">氩气流量反面(L/min)</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <th>初始值</th>
                    <td>@initialParamDict.GetParamValue(WeldParam.焊接电流)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.焊接速度)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.填充材料牌号)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.填充材料规格)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.氩气流量正面)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.氩气流量反面)</td>
                </tr>
                @if (revised)
                {
                    <tr>
                        <th>修订值</th>
                        <td>@revisedParamDict.GetParamValue(WeldParam.焊接电流)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.焊接速度)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.填充材料牌号)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.填充材料规格)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.氩气流量正面)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.氩气流量反面)</td>
                    </tr>
                }
                </tbody>
                <thead>
                <tr>
                    <th></th>
                    <th class="text-center">电流衰减(s)</th>
                    <th class="text-center">保护气滞后(m/s)</th>
                    <th class="text-center">送丝速度(m/min)</th>
                    <th class="text-center">钨极直径(mm)</th>
                    <th class="text-center">喷嘴直径(mm)</th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <th>初始值</th>
                    <td>@initialParamDict.GetParamValue(WeldParam.电流衰减)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.保护气滞后)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.送丝速度)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.钨极直径)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.喷嘴直径)</td>
                    <td></td>
                </tr>
                @if (revised)
                {
                    <tr>
                        <th>修订值</th>
                        <td>@revisedParamDict.GetParamValue(WeldParam.电流衰减)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.保护气滞后)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.送丝速度)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.钨极直径)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.喷嘴直径)</td>
                        <td></td>
                    </tr>
                }
                </tbody>
            }

            @if (procedure.WeldMethod == WeldMethod.电阻焊)
            {
                <thead>
                <tr>
                    <th></th>
                    @*<th class="text-center">焊机型别</th>
                    <th class="text-center">@(procedure.ResistType == ResistType.点焊 ? "电极直径" : "滚轮宽度")(mm)</th>*@
                    <th class="text-center">功率级数</th>
                    <th class="text-center">预压(ms)</th>
                    <th class="text-center">电极压力抬起(Kpa)</th>
                    <th class="text-center">电极压力压下(Kpa)</th>
                    <th class="text-center">脉冲1(ms)</th>
                    <th class="text-center">焊接电流1(A)</th>
                    <th class="text-center">冷却(ms)</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <th>初始值</th>
                    @*<td>@initialParamDict.GetParamValue(WeldParam.焊机型别)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.电极直径滚轮宽度)</td>*@
                    <td>@initialParamDict.GetParamValue(WeldParam.功率级数)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.预压)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.抬起)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.压下)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.脉冲1)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.焊接电流1)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.冷却)</td>
                </tr>
                @if (revised)
                {
                    <tr>
                        <th>修订值</th>
                        @*<td>@revisedParamDict.GetParamValue(WeldParam.焊机型别)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.电极直径滚轮宽度)</td>*@
                        <td>@revisedParamDict.GetParamValue(WeldParam.功率级数)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.预压)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.抬起)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.压下)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.脉冲1)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.焊接电流1)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.冷却)</td>
                    </tr>
                }
                </tbody>
                <thead>
                <tr>
                    <th></th>
                    <th class="text-center">脉冲2(ms)</th>
                    <th class="text-center">焊接电流2(A)</th>
                    <th class="text-center">维持(ms)</th>
                    <th class="text-center">休止(ms)</th>
                    <th class="text-center">下气室气压(kPa)</th>
                    <th class="text-center">中气室气压(kPa)</th>
                    <th class="text-center">焊接速度(m/min)</th>
                    <th class="text-center">熔核直径(mm)</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <th>初始值</th>
                    <td>@initialParamDict.GetParamValue(WeldParam.脉冲2)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.焊接电流2)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.维持)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.休止)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.下气室气压)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.中气室气压)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.焊接速度)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.熔核直径)</td>
                </tr>
                @if (revised)
                {
                    <tr>
                        <th>修订值</th>
                        <td>@revisedParamDict.GetParamValue(WeldParam.脉冲2)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.焊接电流2)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.维持)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.休止)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.下气室气压)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.中气室气压)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.焊接速度)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.熔核直径)</td>
                    </tr>
                }
                </tbody>
            }

            @if (procedure.WeldMethod == WeldMethod.电子束焊)
            {
                <thead>
                <tr>
                    <th></th>
                    <th class="text-center">功率</th>
                    <th class="text-center">加速电压(kV)</th>
                    <th class="text-center">电子束流(mA)</th>
                    <th class="text-center">焊接速度(mm/min)</th>
                    <th class="text-center">聚焦电流(mA)</th>
                    <th class="text-center">工作距离(mm)</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <th>初始值</th>
                    <td>@initialParamDict.GetParamValue(WeldParam.功率)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.加速电压)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.电子束流)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.焊接速度)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.聚焦电流)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.工作距离)</td>
                </tr>
                @if (revised)
                {
                    <tr>
                        <th>修订值</th>
                        <td>@revisedParamDict.GetParamValue(WeldParam.功率)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.加速电压)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.电子束流)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.焊接速度)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.聚焦电流)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.工作距离)</td>
                    </tr>
                }
                </tbody>
                <thead>
                <tr>
                    <th></th>
                    <th class="text-center">束流斜率控制上升(S)</th>
                    <th class="text-center">束流斜率控制下降(S)</th>
                    <th class="text-center">焊接真空度(Pa)</th>
                    <th class="text-center">电子束扫描偏转波形</th>
                    <th class="text-center">电子束扫描偏转幅值</th>
                    <th class="text-center">电子束扫描偏转频率</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <th>初始值</th>
                    <td>@initialParamDict.GetParamValue(WeldParam.上升)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.下降)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.焊接真空度)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.波形)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.幅值)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.频率)</td>
                </tr>
                @if (revised)
                {
                    <tr>
                        <th>修订值</th>
                        <td>@revisedParamDict.GetParamValue(WeldParam.上升)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.下降)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.焊接真空度)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.波形)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.幅值)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.频率)</td>
                    </tr>
                }
                </tbody>
            }

            @if (procedure.WeldMethod == WeldMethod.高频钎焊)
            {
                <thead>
                <tr>
                    <th></th>
                    <th class="text-center">钎料牌号</th>
                    <th class="text-center">填料规格(mm)</th>
                    <th class="text-center">焊接电压(V)</th>
                    <th class="text-center">氩气流量(L/min)</th>
                    <th class="text-center">感应圈编号</th>
                    <th class="text-center">管子规格(mm)</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <th>初始值</th>
                    <td>@initialParamDict.GetParamValue(WeldParam.钎料牌号)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.钎料规格)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.焊接电压)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.氩气流量)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.感应圈编号)</td>
                    <td>@initialParamDict.GetParamValue(WeldParam.管子规格)</td>
                </tr>
                @if (revised)
                {
                    <tr>
                        <th>修订值</th>
                        <td>@revisedParamDict.GetParamValue(WeldParam.钎料牌号)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.钎料规格)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.焊接电压)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.氩气流量)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.感应圈编号)</td>
                        <td>@revisedParamDict.GetParamValue(WeldParam.管子规格)</td>
                    </tr>
                }
                </tbody>
            }

            @*@if (procedure.WeldMethod == WeldMethod.等离子焊)
            {
            }*@
            </table>

            @if (seam.TestState == TestState.进行中)
            {
            <div style="text-align: center; margin: 20px 10px 10px;">
                @*<a class="btn btn-primary" onclick="backs(@process.Id)">返回上一级</a>*@
                <a class="btn btn-primary" onclick="showFinish(@seam.Id)">完成试焊</a>
                <div id="@("finish" + seam.Id)" title="完成试焊" style="display: none">
                    @*//using (Ajax.BeginForm("FinishTest", new { sid = seam.Id }, new AjaxOptions { UpdateTargetId = "finish_test", OnSuccess = "onSimples(data, " + tblidx + ")" }, new { id = "finish_test" }))*@

                    <form id="finishTest" method="post" action="@Url.Action("FinishTest")" onsubmit="return FinishTest()">
                        @Html.Action("FinishTest", new { sid = seam.Id })
                    </form>
                </div>

                <a class="btn btn-info" onclick="showModify(@seam.Id)">修订参数</a>
                <div id="@("modify" + seam.Id)" title="修订参数" style="display: none">
                    @using (Ajax.BeginForm("ModifyParam", new { sid = seam.Id }, new AjaxOptions { UpdateTargetId = "modify_param", OnSuccess = "onSimple(data, " + tblidx + ")" }, new { id = "modify_param" }))
        {
            @Html.Action("ModifyParam", new { sid = seam.Id })
}
                </div>
                <a class="btn btn-info" onclick="reviseShowModify(@seam.Id)">更改报告</a>
                <div id="@("reviseModify" + seam.Id)" title="修订参数" style="display: none">
                    @using (Ajax.BeginForm("ReviseModifyParam", new { sid = seam.Id }, new AjaxOptions { UpdateTargetId = "modify_param", OnSuccess = "onSimple(data, " + tblidx + ")" }, new { id = "modify_param" }))
        {
            @Html.Action("ReviseModifyParam", new { sid = seam.Id })
}
                </div>
            </div>
            }
            else if (seam.TestState == TestState.尚未进行)
            {
                <div style="text-align: center; margin: 20px 10px 10px;">
                    @using (Ajax.BeginForm("StartTest", new {sid = seam.Id}, new AjaxOptions {OnSuccess = "onSimple(data, " + tblidx + ")"}))
                    {
                        <input type="submit" value="开始试焊" class="btn btn-primary">
                    }
                </div>
            }
            </div>
            </div>
            tblidx++;
        }
    }
}

</div>
</div>
</div>


@section scripts {
<script>
        function showFinish(sid) {
            $("#finish" + sid).dialog({ width: "500px", modal: true });
        }

        function showModify(sid) {
            $("#modify" + sid).dialog({ width: "800px", modal: true });
    }//reviseShowModify

    function reviseShowModify(sid) {
        $("#reviseModify" + sid).dialog({ width: "800px", modal: true });
    }

        $(function() {
            activeTab(@procedure.Seams.Count);
        });

        function backs(id) {
            //alert(id);
            window.location.href = '@Url.Action("Detail", "Process")'+'/'+ id;
        }
        function selectUserWelder() {
            $("#select-User").dialog({ width: "400px" });
        }
        function selectUserWelderName() {
            var source = $("#selectWelder").val();
            var rt = /(.+)?(?:\(|（)(.+)(?=\)|）)/.exec(source);//获取括号外面的名称
            //alert(rt[1]);
            $("#welder").val(rt[1]);
            $("#select-User").dialog('close');
        }
        function selectUserChecker() {
            $("#select-Checker").dialog({ width: "400px" });
        }
        function selectUserCheckerName() {
            var source = $("#selectChecker").val();
            var rt = /(.+)?(?:\(|（)(.+)(?=\)|）)/.exec(source);
            $("#checker").val(rt[1]);
            $("#select-Checker").dialog('close');
        }
        function onSimples(data, tabidx) {
            if (data.succeed) {
                reload(tabidx);

            } else if (data.error) {
                alert(data.error);
                reload(tabidx);
            }
        }
        function bytePdf() {
            var objFile  = document.getElementsByName("file");
            if (objFile.value == "") {
                alert("不能空");
            }            
        }
        function FinishTest() {
            $("#finishTest").ajaxSubmit({
                url: "@Url.Action("FinishTest")",
                type: "post",
                resetForm:true,
                success: function (data) {
                    //data = JSON.parse(data);

                    if (data.succeed) {
                        alert("试焊完成");
                        reload();
                    } else {
                        alert(data.error);
                        reload();
                    }

                }
            });

            //不返回false会再进行一次非AJAX提交
            return false;
        }
     function checkPdf(seamId) {
        var w = window.open();
        w.location.href = '@Html.Raw(Url.Action("CheckPDF"))' + '?' + 'seamId' + '=' + seamId;
     }
     function KeyWord(e) {
         var source = $("#keyWord").val();

         var s = $("#keyWords").val(source);
         alert(source);
         
     }
</script>
}